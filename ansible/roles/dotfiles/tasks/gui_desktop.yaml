---
- name: Install basic desktop tools
  become: yes
  package:
    name:
      - ddcutil
      - feh
      - guake
      - i3-wm
      - redshift
      - rofi
      - scrot
      - xfce4-terminal
      - xss-lock
      - yad
    state: present

- name: Install desktop tools for Debian/Ubuntu
  block:
    - name: Install desktop tools from apt repositories
      become: yes
      package:
        name:
          - autorandr
          #- i3lock-fancy
          - picom
          - polybar
          - redshift-gtk  # included in redshift for Arch
          - xbacklight
        state: present
  when: ansible_facts['distribution'] in debian_like_distributions

- name: Install desktop tools for Arch/Manjaro
  block:
    - name: Install desktop tools from Arch core/extra repositories
      become: yes
      package:
        name:
          - xorg-xbacklight
        state: present
    - name: Install desktop tools from AUR
      kewlfft.aur.aur:
        name:
          - autorandr-git
          #- i3lock-fancy-git
          - picom-git
          - polybar-git
        use: makepkg
        state: present
  when: ansible_facts['distribution'] in arch_like_distributions

- name: Symlink configuration files
  include_tasks: make_symlinks.yaml
  vars:
    symlinks:
      - { dest: '~/.config/autorandr', src_name: 'autorandr' }
      - { dest: '~/.config/i3', src_name: 'i3' }
      - { dest: '~/.config/picom.conf', src_name: 'picom/picom.conf' }
      - { dest: '~/.config/polybar', src_name: 'polybar' }
      - { dest: '~/.config/redshift', src_name: 'redshift' }
      - { dest: '~/.config/scripts', src_name: 'scripts' }
      - { dest: '~/.config/xfce4/terminal/terminalrc', src_name: 'terminal/xfce4_terminalrc' }

# For setting display brightness via ACPI, one needs write permissions to /sys after every boot. One solution is udev, see https://wiki.archlinux.org/title/Backlight#Udev_rule
- name: Check for Intel backlight
  stat:
    path: /sys/class/backlight/intel_backlight/
  register: intel_backlight_result
- name: Add Intel backlight udev rule
  when: intel_backlight_result.stat.exists
  become: yes
  lineinfile:
    path: /etc/udev/rules.d/60-backlight.rules
    create: yes
    owner: root
    group: root
    mode: 0644
    regexp: '^.*intel_backlight'
    line: 'ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="intel_backlight", GROUP="video", MODE="0664", RUN+="/bin/chmod g+w /sys/class/backlight/intel_backlight/brightness" RUN+="/bin/chgrp video /sys/class/backlight/intel_backlight/brightness"'
# same thing, but for AMD
- name: Check for AMD backlight
  stat:
    path: /sys/class/backlight/amdgpu_bl0/
  register: amdgpu_bl0_result
- name: Add AMD backlight udev rule
  when: amdgpu_bl0_result.stat.exists
  become: yes
  lineinfile:
    path: /etc/udev/rules.d/60-backlight.rules
    create: yes
    owner: root
    group: root
    mode: 0644
    regexp: '^.*amdgpu_bl0'
    line: 'ACTION=="add", SUBSYSTEM=="backlight", KERNEL=="amdgpu_bl0", GROUP="video", MODE="0664", RUN+="/bin/chmod g+w /sys/class/backlight/amdgpu_bl0/brightness" RUN+="/bin/chgrp video /sys/class/backlight/amdgpu_bl0/brightness"'
# for the above rules to work, the user needs to belong to group video
- name: Adding existing user '{{ ansible_user_id }}' to group video
  become: yes
  user:
    name: '{{ ansible_user_id }}'
    # also add to i2c group to permit changing brightness of external displays via DDC
    groups: video, i2c
    append: yes

# lock/sleep/hibernate settings
- name: Symlink lock/sleep/hibernate configuration files
  include_tasks: make_symlinks_sudo.yaml
  vars:
    symlinks:
      #- { dest: '/etc/systemd/system/i3lock-fancy@.service', src_name: 'lock_sleep_hibernate/i3lock-fancy@.service' }
      - { dest: '/etc/systemd/logind.conf', src_name: 'lock_sleep_hibernate/logind.conf' }
      - { dest: '/etc/systemd/sleep.conf', src_name: 'lock_sleep_hibernate/sleep.conf' }
- name: Determine current username
  shell: whoami
  register: whoami_output
  changed_when: false

# if this fails, just do `systemctl enable i3lock-fancy@$USER.service`
- name: Enable i3lock systemd service for user {{ whoami_output.stdout }}
  become: yes
  systemd:
    enabled: no
    name: 'i3lock-fancy@{{ whoami_output.stdout }}.service'

- name: Symlink mimeapps preferences
  include_tasks: make_symlinks.yaml
  vars:
    symlinks:
      - { dest: '~/.config/mimeapps.list', src_name: mimeapps/mimeapps.list }
      - { dest: '~/.local/bin/focus_before_launch.sh', src_name: mimeapps/focus_before_launch.sh }
      - { dest: '~/.local/share/applications/codium.desktop', src_name: mimeapps/codium.desktop }

# keyboard settings
- name: Roll out custom keyboard layouts
  become: yes
  file:
    path: /usr/share/X11/xkb/symbols/mb
    src: '{{ role_path }}/files/keyboard/mb'
    state: link
